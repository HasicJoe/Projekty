@{
    ViewData["Title"] = "Manage expenses";
}

@model BudgetTracker.Models.ExpenseModel
@if (TempData["Message"] != null)
{
        <div class="alert alert-success mb-2" role="alert">
        @TempData["Message"]
        </div>
}


<h2 class="text-center mt-5">Add expense</h2>
<hr class="w-100" />
<div class="alert alert-warning mb-4" role="alert">
    <h5 class="alert-heading">To add new expenses, you need to have existing "expense categories".</h5>
    <p>You must create at least one expense category before you can add any expenses.</p>
</div>
<div class="w-75 text-center my-5 mx-auto">
    @using (Html.BeginForm("AddExpense", "Expense", FormMethod.Post, new { onsubmit = "addExpense(event)", id = "add-expense" }))
    {
        <div class="form-group my-2">
            <label asp-for="ExpenseCategoryId" class="control-label">Select expense category</label>
            <select asp-for="ExpenseCategoryId" class="form-control"></select>
        </div>
        <div class="form-group my-2">
            <label asp-for="Cost" class="control-label">Select cost</label>
            <div class="input-group col-md-4">
                <input asp-for="Cost" class="form-control" type="number" value="1.00" step="0.01" min="0.01">
                <span class="input-group-addon bg-primary" style="border: 1.5px solid #303030; padding-inline: 15px; padding-block: 4px;">€</span>
            </div>
        </div>
        <div class="form-group my-2">
            <label asp-for="Date" class="control-label"></label>
            <input asp-for="Date" class="form-control" type="datetime-local">
        </div>
        <div class="form-group my-2">
            <label asp-for="ExpenseNote" class="control-label">Note for your expense</label>
            <textarea asp-for="ExpenseNote" class="form-control"></textarea>
        </div>
        <div class="form-group my-4">
            <input type="submit" value="Add new expense" class="btn btn-primary"/>
        </div>
    }
</div>

<h2 class="text-center my-5">My expenses</h2>
<hr class="w-100" />

<div class="container w-100 mx-auto my-5">
    <table class="table table-striped">
        <thead>
        <tr>
            <th class="col-md-3">Expense category</th>
            <th class="col-md-2">Cost</th>
            <th class="col-md-1">Date</th>
            <th class="col-md-3">Note</th>
            <th class="col-md-2">Options</th>
        </tr>
        </thead>
        <tbody id="expenses-table">
        </tbody>
    </table>
</div>


<div class="modal fade" id="edit-expense-modal" tabindex="-1" role="dialog" aria-labelledby="edit-expense-modal-label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Expense</h5>
            </div>
            <div class="modal-body">
                <form id="edit-expense-form">
                    <div class="form-group my-2">
                        <label for="edit-expense-id">Id</label>
                        <input type="text" class="form-control" id="edit-expense-id" name="edit-id" readonly required>
                    </div>
                    <div class="form-group my-2">
                        <label for="edit-expense-category">Expense category</label>
                        <input type="text" class="form-control" id="edit-expense-category" name="edit-category" readonly required>
                    </div>
                    <div class="form-group my-2">
                        <label for="edit-expense-cost">Cost</label>
                        <input type="number" class="form-control" id="edit-expense-cost" name="edit-cost" required step="1" , min="0.01">
                    </div>
                    <div class="form-group my-2">
                        <label for="edit-expense-date">Date</label>
                        <input type="datetime-local" class="form-control" id="edit-expense-date" name="edit-date" required>
                    </div>
                    <div class="form-group my-2">
                        <label for="edit-expense-note">Note</label>
                        <textarea type="text" class="form-control" id="edit-expense-note" name="edit-note" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="hideModal()">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveNewExpense()">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            fetchExpenses();
            //nastavenie aktualneho casu
            var date = new Date();
            document.getElementById("Date").value = date.toISOString().slice(0, 16);
            //ziskanie listu dostupnych kategorii vydavkov
             $.ajax({
                url: '/ExpenseCategory/GetUserExpensesCategory',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    //console.log(data);
                    var select = document.getElementById('ExpenseCategoryId');
                    for(let index = 0; index < data.length; index++){
                        var option = document.createElement("option");
                        option.value = data[index].id;
                        option.text = data[index].name;
                        select.appendChild(option);
                    }
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        });

        // skrytie modalneho okna
        function hideModal() {
            $('#edit-expense-modal').modal('hide');
        }

        // pridanie noveho vydavku
        function addExpense(event){
            event.preventDefault();
            $.ajax({
                type: 'POST',
                url: '/Expense/AddExpense',
                data: $('form#add-expense').serialize(),
                success: function(response) {
                    setTimeout(() => {
                        fetchExpenses();
                    }, 1500);
                    // vyprazdenie formu po pridani vydavku
                    document.getElementById("add-expense").reset();
                    //nastavenie aktualneho casu
                    var date = new Date();
                    document.getElementById("Date").value = date.toISOString().slice(0, 16);
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        }
        
        //nacitanie vydavkov do tabulky
        function fetchExpenses(){
            $.ajax({
                url: '/Expense/GetExpenses',
                type: 'GET',
                dataType: 'json',
                success: function (data){
                    // vycistene predchadzajucich zaznamov
                    $('#expenses-table').empty();
                    // spracovanie nacitanych dat
                    $.each(data, function (index, item) {
                        //console.log(item);
                        var row = '<tr>' +
                            '<td class="col-md-3">' + item.expenseCategoryName + '</td>' +
                            '<td class="col-md-1">' + item.cost + '€ </td>' +
                            '<td class="col-md-2">' + new Date(item.date).toLocaleDateString('en-GB') + '</td>' +
                            '<td class="col-md-3">' + item.expenseNote + '</td>' +
                            '<td class="col-md-2"><button class="btn btn-primary edit-expense mx-1" data-id="' + item.id + '">Edit</button>' +
                            '<button class="btn btn-secondary delete-expense mx-1" data-id="' + item.id + '">Delete</button>' +
                            '</td>' +
                            '</tr>';
                        $('#expenses-table').append(row);
                    });
                    // pridanie event listeneru pre edit tlacidla vydavkov
                    $('.edit-expense').click(function (){
                        var expenseId = $(this).data('id');
                        editExpense(expenseId);
                    });
                    // pridanie event listeneru pre delete tlacidla vydavkov
                    $('.delete-expense').click(function (){
                        var expenseId = $(this).data('id');
                        deleteExpense(expenseId);
                    });
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        }

        // uprava existujuceho zaznamu vydavku - nacitanie modalneho okna
        function editExpense(id){
            $.ajax({
                url: '/Expense/GetExpense/' + id,
                type: 'GET',
                dataType: 'json',
                success: function (expense) {
                    console.log(expense);
                    $('#edit-expense-id').val(expense.id);
                    $('#edit-expense-category').val(expense.expenseCategoryName);
                    $('#edit-expense-cost').val(expense.cost);
                    $('#edit-expense-date').val(expense.date);
                    $('#edit-expense-note').val(expense.expenseNote);
                    $('#edit-expense-modal').modal('show');
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        }
        
        // ulozenie aktualizovaneho vydavku
        function saveNewExpense(){
            $.ajax({
                url: '/Expense/UpdateExpense',
                type: 'POST',
                data: $('#edit-expense-form').serialize(),
                success: function () {
                    hideModal();
                    setTimeout(() => {
                        fetchExpenses();
                    }, 2000);
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        }
         
        function deleteExpense(id){
            alert('Are you sure you want to delete expense?');
            $.ajax({
                url: '/Expense/DeleteExpense/' + id,
                type: 'GET',
                success: function () {
                    setTimeout(() => {
                        fetchExpenses();
                    }, 1500);
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + xhr.responseText);
                }
            });
        }
    </script>
}